@{
    ViewData["Title"] = "Task View";
}
@using TaskManagement.CommonContracts.ViewModels;
@model DisplayTasksViewModel

<div class="col-sm-12 row">
    <h1 class="col-sm-7">View Tasks</h1>
    <a href="/Home/Index" class="align-self-lg-center col-sm-5">Back</a>
</div>

<form class="col-sm-12 pt-4">
    <div class="col-sm-12 form-group row">
        <label for="project" class="col-sm-2 required">Filter by Project</label>
        @Html.DropDownList("project", new SelectList(Model.Projects, "Id", "Name"), "All projects", new { @class = "col-sm-5 form-control", @onchange = "ViewTasksByProject(this)" })
    </div>
    <div class="col-sm-12 form-group">
        @for (int projectIndex = 0; projectIndex < Model.Projects.Count; projectIndex++)
        {
            <div class="form-group">
                <h3>Project : @Model.Projects[projectIndex].Name</h3>

                @if (Model.Projects[projectIndex].Tasks.Count != 0)
                {
                    @for (int taskIndex = 0; taskIndex < Model.Tasks.Count; taskIndex++)
                    {
                        if (Model.Projects[projectIndex].Id == Model.Tasks[taskIndex].ProjectId)
                        {
                            <div class="col-sm-12 form-group">
                                <label><b>Task Description:</b> @Model.Tasks[taskIndex].Description</label><br />
                                <label><b>Task Start Date:</b> @Model.Tasks[taskIndex].StartDate.ToShortDateString()</label><br />
                                <label><b>Task End Date:</b> @Model.Tasks[taskIndex].DueDate.ToShortDateString()</label><br />
                                <table class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th scope="col">MID</th>
                                            <th scope="col">Employee Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int employeeIndex = 0; employeeIndex < Model.Tasks[taskIndex].TasksEmployees.Count; employeeIndex++)
                                        {
                                            if (Model.Tasks[taskIndex].Id == Model.Tasks[taskIndex].TasksEmployees[employeeIndex].TaskId)
                                            {
                                                <tr>
                                                    <td>@Model.Tasks[taskIndex].TasksEmployees[employeeIndex].Employee.Id</td>
                                                    <td>@Model.Tasks[taskIndex].TasksEmployees[employeeIndex].Employee.Name</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                }
                else
                {
                    <label class="col-sm-12 text-danger">No tasks available under this project.</label>
                }
            </div>
        }
    </div>
</form>
<script>
    function ViewTasksByProject(input) {
        location.href = '/ViewTasks/ViewTasksByProject/' + input.value;
    }
</script>